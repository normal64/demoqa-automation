{
  "stats": {
    "suites": 1,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2023-06-19T06:37:16.551Z",
    "end": "2023-06-19T06:37:32.770Z",
    "duration": 16219,
    "testsRegistered": 5,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1c966078-48c9-41e5-b4ee-424381b36b3c",
      "title": "",
      "fullFile": "D:\\Testing\\projects\\demoqa\\test\\registration.js",
      "file": "\\test\\registration.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2024f241-0f71-48d1-85d4-75945bfdce59",
          "title": "task for go phptravels",
          "fullFile": "D:\\Testing\\projects\\demoqa\\test\\registration.js",
          "file": "\\test\\registration.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"task for go phptravels\"",
              "fullTitle": "task for go phptravels \"before all\" hook in \"task for go phptravels\"",
              "timedOut": false,
              "duration": 5249,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Set up the Selenium WebDriver instance\ndriver = await new Builder().forBrowser(\"chrome\").build();\nloginPage = new LoginPage(driver);",
              "err": {},
              "uuid": "7cb771ff-4882-4096-b02e-2fb0db91f457",
              "parentUUID": "2024f241-0f71-48d1-85d4-75945bfdce59",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"task for go phptravels\"",
              "fullTitle": "task for go phptravels \"after all\" hook in \"task for go phptravels\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Quit the WebDriver instance\n   // await driver.quit();",
              "err": {},
              "uuid": "ffaf70ad-7b79-4f0f-94c7-b9eaa26e71da",
              "parentUUID": "2024f241-0f71-48d1-85d4-75945bfdce59",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "successful registration",
              "fullTitle": "task for go phptravels successful registration",
              "timedOut": false,
              "duration": 6906,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the webpage\ndriver.get(\"https://demoqa.com/\");\nawait driver.manage().window().maximize();\n//navigation to registration form\nawait driver.wait(\n  until.elementIsVisible(driver.findElement(By.className(\"card\")))\n);\nconst secondElement = await driver.findElement(\n  By.css(\"div.card:nth-child(2)\")\n);\nawait secondElement.click();\nconst registrationFormLink = await driver.findElement(\n  By.xpath(\"//*[contains(text(), 'Practice Form')]\")\n);\nregistrationFormLink.click();\n// Wait until the page URL is \"https://demoqa.com/automation-practice-form\"\nawait driver.wait(\n  until.urlIs(\"https://demoqa.com/automation-practice-form\")\n);\n\nloginPage.login(\"Demnmnis\", \"Poplavskii\",\"hirethisguy@myspace.com\");\n\nconst genderInput = await driver.findElement(\n  By.css(\"label[for='gender-radio-1']\")\n);\nawait genderInput.click();\nconst mobilePhoneInput = await driver.findElement(By.id(\"userNumber\"));\nawait mobilePhoneInput.sendKeys(\"43211235677\");\n//picking date of birth\nconst dateOfBirthInput = await driver.findElement(\n  By.id(\"dateOfBirthInput\")\n);\nawait dateOfBirthInput.click();\n//year picking\nconst yearInputDateOfBirthInput = await driver.findElement(\n  By.className(\"react-datepicker__year-select\")\n);\nawait yearInputDateOfBirthInput.click();\nconst SelectedBirthYear = await driver.findElement(\n  By.xpath(\"//*[contains(text(), '2007')]\")\n);\nSelectedBirthYear.click();\nawait yearInputDateOfBirthInput.click();\n//month picking\nconst monthInputDateOfBirthInput = await driver.findElement(\n  By.className(\"react-datepicker__month-select\")\n);\nawait monthInputDateOfBirthInput.click();\nconst SelectedBirthMonth = await driver.findElement(\n  By.xpath(\"//*[contains(text(), 'August')]\")\n);\nawait SelectedBirthMonth.click();\nawait monthInputDateOfBirthInput.click();\n//picking day\nconst dayDateOfBirthInput = await driver.findElement(\n  By.className(\"react-datepicker__day react-datepicker__day--009\")\n);\nawait dayDateOfBirthInput.click();\n//submit form js because div intercepting click by selenium\nconst submitButton = await driver.findElement(By.id(\"submit\"));\nawait driver.executeScript(\"arguments[0].click();\", submitButton);\n// Check if the modal window is displayed\nconst isModalWindow = await isModalWindowDisplayed(driver);\ntry {\n  expect(isModalWindow).to.be.true;\n} catch (error) {\n  console.log(`error with modal popup`, error);\n}\n// Check if the header contains the expected text\nconst headerText = await getModalHeaderText(driver);\ntry {\n  expect(headerText).to.include(\"Thanks for submitting the form\");\n} catch (error) {\n  console.log(`error with displayed module`, error);\n}",
              "err": {},
              "uuid": "4fb1885f-e956-44f7-965b-2f4604d5dff6",
              "parentUUID": "2024f241-0f71-48d1-85d4-75945bfdce59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Submit form button disabled if inputs are empty",
              "fullTitle": "task for go phptravels Submit form button disabled if inputs are empty",
              "timedOut": false,
              "duration": 537,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Navigate to the webpage\nawait driver.get(\"https://demoqa.com/\");\nawait driver.manage().window().maximize();\n//navigation to registration form\nawait driver.wait(\n  until.elementIsVisible(driver.findElement(By.className(\"card\")))\n);\nconst secondElement = await driver.findElement(\n  By.css(\"div.card:nth-child(2)\")\n);\nawait driver.wait(until.elementIsClickable(secondElement));\nawait secondElement.click();\n\nconst registrationFormLink = await driver.findElement(\n  By.xpath(\"//*[contains(text(), 'Practice Form')]\")\n);\nregistrationFormLink.click();\n// Wait until the page URL is \"https://demoqa.com/automation-practice-form\"\nawait driver.wait(\n  until.urlIs(\"https://demoqa.com/automation-practice-form\")\n);\ntry {\n  // //submit form js because div intercepting click by selenium\n  const submitButton = await driver.findElement(By.id(\"submit\"));\n  await driver.executeScript(\"arguments[0].click();\", submitButton);\n  // Check if the submit button is disabled\n  const isDisabled = await submitButton.isEnabled();\n  // Assert the expected state of the submit button\n  assert.strictEqual(\n    isDisabled,\n    false,\n    \"Submit button is expected to be disabled.\"\n  );\n  console.log(\"Submit button is disabled as expected.\");\n} catch (error) {\n  console.error(error.message);\n}",
              "err": {
                "message": "TypeError: until.elementIsClickable is not a function",
                "estack": "TypeError: until.elementIsClickable is not a function\n    at Context.<anonymous> (test\\registration.js:121:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)",
                "diff": null
              },
              "uuid": "33bc839e-8326-4664-9dc8-7c60f748918d",
              "parentUUID": "2024f241-0f71-48d1-85d4-75945bfdce59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Entering spacebar in name, family name",
              "fullTitle": "task for go phptravels Entering spacebar in name, family name",
              "timedOut": false,
              "duration": 1166,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the webpage\ndriver.get(\"https://demoqa.com/\");\nawait driver.manage().window().maximize();\n//navigation to registration form\nawait driver.wait(\n  until.elementIsVisible(driver.findElement(By.className(\"card\")))\n);\nconst secondElement = await driver.findElement(\n  By.css(\"div.card:nth-child(2)\")\n);\nawait secondElement.click();\nconst registrationFormLink = await driver.findElement(\n  By.xpath(\"//*[contains(text(), 'Practice Form')]\")\n);\nregistrationFormLink.click();\n// Wait until the page URL is \"https://demoqa.com/automation-practice-form\"\nawait driver.wait(\n  until.urlIs(\"https://demoqa.com/automation-practice-form\")\n);\nconst firstName = await driver.findElement(By.id(\"firstName\"));\nawait firstName.sendKeys(Key.SPACE);\nawait firstName.sendKeys(Key.ENTER);\nconst lastName = await driver.findElement(By.id(\"lastName\"));\nawait lastName.sendKeys(Key.SPACE);\nawait lastName.sendKeys(Key.ENTER);\nconst genderInput = await driver.findElement(\n  By.css(\"label[for='gender-radio-1']\")\n);\nawait genderInput.click();\nconst mobilePhoneInput = await driver.findElement(By.id(\"userNumber\"));\nawait mobilePhoneInput.sendKeys(\"43211235677\");\n//submit form js because div intercepting click by selenium\nconst submitButton = await driver.findElement(By.id(\"submit\"));\nawait driver.executeScript(\"arguments[0].click();\", submitButton);\ntry {\n  // Check if the modal window is displayed\n  const isModalWindow = await isModalWindowDisplayed(driver);\n  expect(isModalWindow).to.be.true;\n  console.log(\n    `Negative case Submit worked: spacebar in \"Name\",\"Surname\" inputs `\n  );\n} catch (error) {\n  console.log(`error with modal popup`, error);\n}",
              "err": {},
              "uuid": "70f2897a-80de-4ce7-bf1b-bdb4ea1cd00f",
              "parentUUID": "2024f241-0f71-48d1-85d4-75945bfdce59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Entering less than 10 digits in 'Mobile' field",
              "fullTitle": "task for go phptravels Entering less than 10 digits in 'Mobile' field",
              "timedOut": false,
              "duration": 1135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the webpage\ndriver.get(\"https://demoqa.com/\");\nawait driver.manage().window().maximize();\n//navigation to registration form\nawait driver.wait(\n  until.elementIsVisible(driver.findElement(By.className(\"card\")))\n);\nconst secondElement = await driver.findElement(\n  By.css(\"div.card:nth-child(2)\")\n);\nawait secondElement.click();\nconst registrationFormLink = await driver.findElement(\n  By.xpath(\"//*[contains(text(), 'Practice Form')]\")\n);\nregistrationFormLink.click();\n// Wait until the page URL is \"https://demoqa.com/automation-practice-form\"\nawait driver.wait(\n  until.urlIs(\"https://demoqa.com/automation-practice-form\")\n);\nconst firstName = await driver.findElement(By.id(\"firstName\"));\nawait firstName.sendKeys(\"name\");\nawait firstName.sendKeys(Key.ENTER);\nconst lastName = await driver.findElement(By.id(\"lastName\"));\nawait lastName.sendKeys(\"surname\");\nawait lastName.sendKeys(Key.ENTER);\nconst genderInput = await driver.findElement(\n  By.css(\"label[for='gender-radio-1']\")\n);\nawait genderInput.click();\nconst mobilePhoneInput = await driver.findElement(By.id(\"userNumber\"));\nawait mobilePhoneInput.sendKeys(\"43211\");\n//submit form js because div intercepting click by selenium\nconst submitButton = await driver.findElement(By.id(\"submit\"));\nawait driver.executeScript(\"arguments[0].click();\", submitButton);\ntry {\n  // Check if the modal window is displayed\n  const isModalWindow = await isModalWindowDisplayed(driver);\n  expect(isModalWindow).to.be.true;\n  console.log(`Negative case Submit worked: short number`);\n} catch (error) {\n  if (\n    error.name === \"NoSuchElementError\" &&\n    error.message.includes(\"Unable to locate element\")\n  ) {\n    console.log(\"Modal window is not displayed. Test failed.\");\n  } else {\n    console.log(\"An error occurred:\", error);\n  }\n}",
              "err": {},
              "uuid": "2cc40f7b-7127-4de0-9957-931cc99f9644",
              "parentUUID": "2024f241-0f71-48d1-85d4-75945bfdce59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Entering less than 10 digits in 'Mobile' field",
              "fullTitle": "task for go phptravels Entering less than 10 digits in 'Mobile' field",
              "timedOut": false,
              "duration": 1135,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Navigate to the webpage\ndriver.get(\"https://demoqa.com/\");\nawait driver.manage().window().maximize();\n//navigation to registration form\nawait driver.wait(\n  until.elementIsVisible(driver.findElement(By.className(\"card\")))\n);\nconst secondElement = await driver.findElement(\n  By.css(\"div.card:nth-child(2)\")\n);\nawait secondElement.click();\nconst registrationFormLink = await driver.findElement(\n  By.xpath(\"//*[contains(text(), 'Practice Form')]\")\n);\nregistrationFormLink.click();\n// Wait until the page URL is \"https://demoqa.com/automation-practice-form\"\nawait driver.wait(\n  until.urlIs(\"https://demoqa.com/automation-practice-form\")\n);\nconst firstName = await driver.findElement(By.id(\"firstName\"));\nawait firstName.sendKeys(\"name\");\nawait firstName.sendKeys(Key.ENTER);\nconst lastName = await driver.findElement(By.id(\"lastName\"));\nawait lastName.sendKeys(\"surname\");\nawait lastName.sendKeys(Key.ENTER);\nconst genderInput = await driver.findElement(\n  By.css(\"label[for='gender-radio-1']\")\n);\nawait genderInput.click();\nconst mobilePhoneInput = await driver.findElement(By.id(\"userNumber\"));\nawait mobilePhoneInput.sendKeys(\"43211\");\n//submit form js because div intercepting click by selenium\nconst submitButton = await driver.findElement(By.id(\"submit\"));\nawait driver.executeScript(\"arguments[0].click();\", submitButton);\ntry {\n  // Check if the modal window is displayed\n  const isModalWindow = await isModalWindowDisplayed(driver);\n  expect(isModalWindow).to.be.true;\n  console.log(`Negative case Submit worked: short number`);\n} catch (error) {\n  if (\n    error.name === \"NoSuchElementError\" &&\n    error.message.includes(\"Unable to locate element\")\n  ) {\n    console.log(\"Modal window is not displayed. Test failed.\");\n  } else {\n    console.log(\"An error occurred:\", error);\n  }\n}",
              "err": {},
              "uuid": "995d2793-aa35-4796-bbdb-077df3c58844",
              "parentUUID": "2024f241-0f71-48d1-85d4-75945bfdce59",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4fb1885f-e956-44f7-965b-2f4604d5dff6",
            "70f2897a-80de-4ce7-bf1b-bdb4ea1cd00f",
            "2cc40f7b-7127-4de0-9957-931cc99f9644",
            "995d2793-aa35-4796-bbdb-077df3c58844"
          ],
          "failures": [
            "33bc839e-8326-4664-9dc8-7c60f748918d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 10879,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}